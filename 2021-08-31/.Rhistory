mutate(release_country = fct_lump(release_country, 20),
release_country = fct_reorder(release_country, log10(budget), median, na.rm = TRUE)) %>%
ggplot(aes(release_country, log10(budget), fill = release_country)) +
geom_boxplot() +
coord_flip() +
theme_bw() +
theme(
legend.position = "none"
) +
labs(y = "budget (log10-scale)", x = NULL, title = "20 Country-wise Movie Budget")
movies %>%
ggplot(aes(budget, review_rating)) +
geom_point() +
scale_x_log10()+
geom_smooth(method = "lm")
movies %>%
mutate(year = year(release_date)) %>%
count(release_country, year, sort = TRUE) %>%
mutate(release_country = fct_lump(release_country, n = 15, w = n),
release_country = fct_reorder(release_country, n)) %>%
ggplot(aes(n, release_country, fill = release_country)) +
geom_col() +
facet_wrap(~year) +
theme_bw() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "none"
) +
labs(x = "# of horror movies", y = NULL, title = "Yearly # of Horror Movies Produced by Each Country")
movies %>%
mutate(year = year(release_date)) %>%
count(language, year, sort = TRUE) %>%
mutate(language = fct_lump(language, n = 15, w = n),
language = fct_reorder(language, n)) %>%
ggplot(aes(n, language, fill = language)) +
geom_col() +
facet_wrap(~year) +
theme_bw() +
theme(
strip.text = element_text(face = "bold"),
legend.position = "none"
) +
labs(x = "# of horror movies", y = NULL, title = "Yearly # of Horror Movies Produced in Each Language")
movies %>%
mutate(release_country = fct_lump(release_country, 15)) %>%
ggplot(aes(release_country, budget)) +
geom_boxplot() +
coord_flip()
movies %>%
mutate(release_country = fct_lump(release_country, 15)) %>%
ggplot(aes(release_country, budget)) +
geom_boxplot() +
coord_flip() +
theme_bw() +
theme(
axis.text.y = element_blank()
) +
scale_x_continuous(scales::dollar)
movies %>%
mutate(release_country = fct_lump(release_country, 15)) %>%
ggplot(aes(release_country, budget)) +
geom_boxplot() +
coord_flip() +
theme_bw() +
theme(
axis.text.y = element_blank()
) +
scale_x_discrete(scales::dollar)
movies %>%
mutate(release_country = fct_lump(release_country, 15)) %>%
ggplot(aes(release_country, budget)) +
geom_boxplot() +
coord_flip() +
theme_bw() +
theme(
axis.text.y = element_blank()
) +
scale_y_continuous(scales::dollar)
movies %>%
mutate(release_country = fct_lump(release_country, 15)) %>%
ggplot(aes(release_country, budget)) +
geom_boxplot() +
coord_flip() +
theme_bw() +
theme(
axis.text.y = element_blank()
) +
scale_y_continuous(scales::dollar)
movies %>%
mutate(release_country = fct_lump(release_country, 15)) %>%
ggplot(aes(release_country, budget)) +
geom_boxplot() +
coord_flip() +
theme_bw() +
theme(
axis.text.y = element_blank()
)
movies %>%
mutate(release_country = fct_lump(release_country, 15)) %>%
ggplot(aes(release_country, budget)) +
geom_boxplot() +
coord_flip() +
theme_bw() +
theme(
axis.text.x = element_blank()
) +
scale_y_continuous(scales::dollar)
movies %>%
mutate(release_country = fct_lump(release_country, 15)) %>%
ggplot(aes(release_country, budget)) +
geom_boxplot() +
coord_flip() +
theme_bw() +
theme(
axis.text.x = element_blank()
) +
scale_y_continuous(labels = scales::dollar)
library(scales)
movies %>%
mutate(release_country = fct_lump(release_country, 15)) %>%
ggplot(aes(release_country, budget)) +
geom_boxplot() +
coord_flip() +
theme_bw() +
theme(
axis.text.x = element_blank()
) +
scale_y_continuous(labels = dollar)
movies %>%
mutate(release_country = fct_lump(release_country, 15)) %>%
ggplot(aes(release_country, budget)) +
geom_boxplot() +
coord_flip() +
theme_bw() +
theme(
axis.text.x = element_blank()
) +
scale_y_continuous(labels = dollar())
movies %>%
mutate(release_country = fct_lump(release_country, 15)) %>%
ggplot(aes(release_country, budget)) +
geom_boxplot() +
coord_flip() +
theme_bw() +
theme(
axis.text.x = element_blank()
) +
scale_y_continuous(labels = dollar)
movies %>%
mutate(release_country = fct_lump(release_country, 15)) %>%
ggplot(aes(release_country, budget)) +
geom_boxplot() +
coord_flip() +
theme_bw() +
theme(
axis.text.x = element_blank()
) +
scale_x_continuous(labels = dollar)
movies %>%
mutate(release_country = fct_lump(release_country, 15)) %>%
ggplot(aes(release_country, budget)) +
geom_boxplot() +
coord_flip() +
theme_bw() +
theme(
axis.text.x = element_blank()
) +
scale_y_continuous(labels = dollar)
movies %>%
mutate(release_country = fct_lump(release_country, 15)) %>%
ggplot(aes(release_country, budget)) +
geom_boxplot() +
coord_flip() +
theme_bw() +
theme(
axis.text.y = element_blank()
) +
scale_y_continuous(labels = dollar)
movies %>%
mutate(release_country = fct_lump(release_country, 15)) %>%
ggplot(aes(release_country, budget)) +
geom_boxplot() +
coord_flip() +
theme_bw() +
theme(
axis.title.x = element_blank()
) +
scale_y_continuous(labels = dollar)
movies %>%
mutate(release_country = fct_lump(release_country, 15)) %>%
ggplot(aes(release_country, budget)) +
geom_boxplot() +
coord_flip() +
theme_bw() +
theme(
axis.title.y = element_blank()
) +
scale_y_continuous(labels = dollar)
movies %>%
mutate(release_country = fct_lump(release_country, 20),
release_country = fct_reorder(release_country, log10(budget), median, na.rm = TRUE)) %>%
ggplot(aes(release_country, log10(budget), fill = release_country)) +
geom_boxplot() +
coord_flip() +
theme_bw() +
theme(
legend.position = "none"
) +
labs(y = "budget (log10-scale)", x = NULL, title = "20 Country-wise Movie Budget")+
scale_y_continuous(labels = dollar)
movies %>%
mutate(release_country = fct_lump(release_country, 20),
release_country = fct_reorder(release_country, log10(budget), median, na.rm = TRUE)) %>%
ggplot(aes(release_country, log10(budget), fill = release_country)) +
geom_boxplot() +
coord_flip() +
theme_bw() +
theme(
legend.position = "none"
) +
labs(y = "budget (log10-scale)", x = NULL, title = "20 Country-wise Movie Budget")+
scale_y_continuous(labels = dollar)
movies %>%
ggplot(aes(budget, review_rating)) +
geom_point() +
scale_x_log10()+
geom_smooth(method = "lm")
movies %>%
ggplot(aes(budget, review_rating)) +
geom_point() +
#scale_x_log10()+
geom_smooth(method = "lm")
movies %>%
ggplot(aes(budget, review_rating)) +
geom_point() +
scale_x_log10()+
geom_smooth(method = "lm")
movies %>%
ggplot(aes(budget, review_rating)) +
geom_point() +
scale_x_log10()+
geom_smooth(method = "lm") +
theme_bw() +
scale_x_continuous(labels = dollar)
movies %>%
ggplot(aes(budget, review_rating)) +
geom_point() +
scale_x_log10(labels = dollar) +
geom_smooth(method = "lm") +
theme_bw()
movies %>%
ggplot(aes(budget, review_rating)) +
geom_point() +
scale_x_log10(labels = dollar) +
geom_smooth(method = "lm") +
theme_bw() +
labs(x = "budget (log10 scale)")
movies %>%
separate(plot, c("director", "cast_sentence", "plot"), extra = "merge", sep = "\\. ", fill = "right") %>%
filter(!is.na(review_rating)) %>%
mutate(director = str_remove(director, "Directed by "))
movies_processed <- movies %>%
separate(plot, c("director", "cast_sentence", "plot"), extra = "merge", sep = "\\. ", fill = "right") %>%
filter(!is.na(review_rating)) %>%
mutate(director = str_remove(director, "Directed by "))
movies_processed
movies_processed %>%
count(director, sort = TRUE)
movies_processed %>%
unnest_tokens(word, plot) %>%
anti_join(stop_words, by = "word")
movies_unnested <- movies_processed %>%
unnest_tokens(word, plot) %>%
anti_join(stop_words, by = "word")
movies_unnested %>%
group_by(word) %>%
summarize(movies = n(),
avg_rating = mean(review_rating, na.rm = TRUE)) %>%
arrange(desc(movies)) %>%
filter(movies > 100) %>%
mutate(word = fct_reorder(word, avg_rating)) %>%
ggplot(aes(avg_rating, word)) +
geom_point()
movies_unnested %>%
group_by(word) %>%
summarize(movies = n(),
avg_rating = mean(review_rating, na.rm = TRUE)) %>%
arrange(desc(movies)) %>%
filter(movies > 100) %>%
mutate(word = fct_reorder(word, avg_rating)) %>%
ggplot(aes(avg_rating, word)) +
geom_point() +
theme_bw() +
labs(x = "average rating", y = "description word", title = "Description Words and Movie Ratings",
subtitle = "Word apeared in movie description and average rating of all movies whose description includes the word")
movie_word_matrix <- movies_unnested %>%
filter(!is.na(review_rating)) %>%
add_count(word) %>%
filter(n >= 20) %>%
count(title, word) %>%
cast_sparse(title, word, n)
rating <- movies$review_rating[match(rownames(movie_word_matrix), movies$title)]
lasso_model <- cv.glmnet(movie_word_matrix, rating)
plot(lasso_model)
tidy(lasso_model$glmnet.fit) %>%
filter(lambda == lasso_model$lambda.min,
term != "(Intercept)") %>%
mutate(term = fct_reorder(term, estimate)) %>%
ggplot(aes(term, estimate)) +
geom_col() +
coord_flip()
tidy(lasso_model$glmnet.fit) %>%
filter(term %in% c("quickly", "seek", "army", "teacher", "unexpected", "friends", "evil")) %>%
ggplot(aes(lambda, estimate, color = term)) +
geom_line() +
geom_vline(xintercept = lasso_model$lambda.min) +
geom_hline(yintercept = 0, lty = 2)
movies_processed %>%
select(title, genres) %>%
mutate(type = "genre") %>%
separate_rows(genres, sep = "\\| ?") %>%
unite(feature, type, genres, sep = ": ") %>%
mutate(n = 1)
movie_word_matrix <- movies_unnested %>%
filter(!is.na(review_rating)) %>%
add_count(word) %>%
filter(n >= 20) %>%
count(title, word) %>%
cast_sparse(title, word, n)
rating <- movies$review_rating[match(rownames(movie_word_matrix), movies$title)]
lasso_model <- cv.glmnet(movie_word_matrix, rating)
plot(lasso_model)
tidy(lasso_model$glmnet.fit) %>%
filter(lambda == lasso_model$lambda.min,
term != "(Intercept)") %>%
mutate(term = fct_reorder(term, estimate)) %>%
ggplot(aes(term, estimate)) +
geom_col() +
coord_flip()
tidy(lasso_model$glmnet.fit) %>%
filter(term %in% c("quickly", "seek", "army", "teacher", "unexpected", "friends", "evil")) %>%
ggplot(aes(lambda, estimate, color = term)) +
geom_line() +
geom_vline(xintercept = lasso_model$lambda.min) +
geom_hline(yintercept = 0, lty = 2)
movies_processed %>%
select(title, genres) %>%
mutate(type = "genre") %>%
separate_rows(genres, sep = "\\| ?") %>%
unite(feature, type, genres, sep = ": ") %>%
mutate(n = 1)
movie_word_matrix <- movies_unnested %>%
filter(!is.na(review_rating)) %>%
add_count(word) %>%
filter(n >= 20) %>%
count(title, word) %>%
cast_sparse(title, word, n)
rating <- movies$review_rating[match(rownames(movie_word_matrix), movies$title)]
lasso_model <- cv.glmnet(movie_word_matrix, rating)
plot(lasso_model)
movies_unnested %>%
filter(!is.na(review_rating)) %>%
add_count(word)
movie_word_matrix <- movies_unnested %>%
filter(!is.na(review_rating)) %>%
add_count(word) %>%
filter(n >= 20) %>%
count(title, word) %>%
cast_sparse(title, word, n)
rating <- movies$review_rating[match(rownames(movie_word_matrix), movies$title)]
lasso_model <- cv.glmnet(movie_word_matrix, rating)
plot(lasso_model)
tidy(lasso_model$glmnet.fit) %>%
filter(lambda == lasso_model$lambda.min,
term != "(Intercept)") %>%
mutate(term = fct_reorder(term, estimate)) %>%
ggplot(aes(term, estimate)) +
geom_col() +
coord_flip()
tidy(lasso_model$glmnet.fit) %>%
filter(term %in% c("quickly", "seek", "army", "teacher", "unexpected", "friends", "evil")) %>%
ggplot(aes(lambda, estimate, color = term)) +
geom_line() +
geom_vline(xintercept = lasso_model$lambda.min) +
geom_hline(yintercept = 0, lty = 2)
movies_processed %>%
select(title, genres) %>%
mutate(type = "genre") %>%
separate_rows(genres, sep = "\\| ?") %>%
unite(feature, type, genres, sep = ": ") %>%
mutate(n = 1)
features <- movies_processed %>%
filter(!is.na(review_rating)) %>%
select(title, genres, director, cast, movie_rating, language, release_country) %>%
mutate(director = str_remove(director, "Directed by ")) %>%
pivot_longer(!title, names_to = "type", values_to = "value") %>%
#gather(type, value, -title) %>% View()
filter(!is.na(value)) %>%
separate_rows(value, sep = "\\| ?") %>%
unite(feature, type, value, sep = ": ") %>%
mutate(n = 1)
movie_feature_matrix <- movies_unnested %>%
filter(!is.na(review_rating)) %>%
count(title, feature = paste0("word: ", word)) %>%
bind_rows(features) %>%
add_count(feature) %>%
filter(nn >= 10) %>%
cast_sparse(title, feature)
rating <- movies$review_rating[match(rownames(movie_feature_matrix), movies$title)]
feature_lasso_model <- cv.glmnet(movie_feature_matrix, rating)
plot(feature_lasso_model)
movie_word_matrix <- movies_unnested %>%
filter(!is.na(review_rating)) %>%
add_count(word) %>%
filter(n >= 20) %>%
count(title, word) %>%
cast_sparse(title, word, n)
rating <- movies$review_rating[match(rownames(movie_word_matrix), movies$title)]
lasso_model <- cv.glmnet(movie_word_matrix, rating)
plot(lasso_model)
tidy(lasso_model$glmnet.fit) %>%
filter(lambda == lasso_model$lambda.min,
term != "(Intercept)") %>%
mutate(term = fct_reorder(term, estimate)) %>%
ggplot(aes(term, estimate)) +
geom_col() +
coord_flip()
tidy(lasso_model$glmnet.fit) %>%
filter(lambda == lasso_model$lambda.min,
term != "(Intercept)") %>%
mutate(term = fct_reorder(term, estimate)) %>%
ggplot(aes(term, estimate)) +
geom_col() +
coord_flip() +
ggtitle("Words Contributing to Movie Ratings")
tidy(lasso_model$glmnet.fit) %>%
filter(term %in% c("quickly", "seek", "army", "teacher", "unexpected", "friends", "evil")) %>%
ggplot(aes(lambda, estimate, color = term)) +
geom_line() +
geom_vline(xintercept = lasso_model$lambda.min) +
geom_hline(yintercept = 0, lty = 2)
features <- movies_processed %>%
filter(!is.na(review_rating)) %>%
select(title, genres, director, cast, movie_rating, language, release_country) %>%
mutate(director = str_remove(director, "Directed by ")) %>%
pivot_longer(!title, names_to = "type", values_to = "value") %>%
#gather(type, value, -title) %>% View()
filter(!is.na(value)) %>%
separate_rows(value, sep = "\\| ?") %>%
unite(feature, type, value, sep = ": ") %>%
mutate(n = 1)
movie_feature_matrix <- movies_unnested %>%
filter(!is.na(review_rating)) %>%
count(title, feature = paste0("word: ", word)) %>%
bind_rows(features) %>%
add_count(feature) %>%
filter(nn >= 10) %>%
cast_sparse(title, feature)
rating <- movies$review_rating[match(rownames(movie_feature_matrix), movies$title)]
feature_lasso_model <- cv.glmnet(movie_feature_matrix, rating)
plot(feature_lasso_model)
features
#
# tidy(feature_lasso_model$glmnet.fit) %>%
#   filter(term %in% c("word: buried", "word: call")) %>%
#   ggplot(aes(lambda, estimate, color = term)) +
#   geom_line() +
#   geom_vline(xintercept = feature_lasso_model$lambda.min) +
#   geom_hline(yintercept = 0, lty = 2)
#
tidy(feature_lasso_model$glmnet.fit) %>%
filter(lambda == feature_lasso_model$lambda.1se,
term != "(Intercept)") %>%
mutate(term = fct_reorder(term, estimate)) %>%
ggplot(aes(term, estimate)) +
geom_col() +
coord_flip() +
labs(x = "",
y = "Coefficient for predicting movie rating",
title = "What affects a horror movie rating?",
subtitle = "Based on a lasso regression to predict IMDb ratings of ~3000 movies")
features <- movies_processed %>%
filter(!is.na(review_rating)) %>%
select(title, genres, director, cast, movie_rating, language, release_country) %>%
mutate(director = str_remove(director, "Directed by ")) %>%
pivot_longer(!title, names_to = "type", values_to = "value") %>%
#gather(type, value, -title) %>% View()
filter(!is.na(value)) %>%
separate_rows(value, sep = "\\| ?") %>%
unite(feature, type, value, sep = ": ") %>%
mutate(n = 1)
movie_feature_matrix <- movies_unnested %>%
filter(!is.na(review_rating)) %>%
count(title, feature = paste0("word: ", word)) %>%
bind_rows(features) %>%
add_count(feature) %>%
filter(nn >= 10) %>%
cast_sparse(title, feature)
rating <- movies$review_rating[match(rownames(movie_feature_matrix), movies$title)]
feature_lasso_model <- cv.glmnet(movie_feature_matrix, rating)
plot(feature_lasso_model)
tidy(feature_lasso_model$glmnet.fit) %>%
filter(lambda == feature_lasso_model$lambda.1se,
term != "(Intercept)") %>%
mutate(term = fct_reorder(term, estimate)) %>%
ggplot(aes(term, estimate)) +
geom_col() +
coord_flip() +
labs(x = "",
y = "Coefficient for predicting movie rating",
title = "What affects a horror movie rating?",
subtitle = "Based on a lasso regression to predict IMDb ratings of ~3000 movies")
